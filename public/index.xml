<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1pedro</title>
    <link>https://blog.1pedro.dev/</link>
    <description>Recent content on 1pedro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 May 2022 11:28:43 -0300</lastBuildDate><atom:link href="https://blog.1pedro.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>First impressions on Clojure</title>
      <link>https://blog.1pedro.dev/clojure/first_impressions/</link>
      <pubDate>Thu, 05 May 2022 11:28:43 -0300</pubDate>
      
      <guid>https://blog.1pedro.dev/clojure/first_impressions/</guid>
      <description>Has been 3 weeks that I&amp;rsquo;m learning Clojure. Here I will dedicate myself to putting posts about what I&amp;rsquo;m thinking of Clojure.
Beforehand I wanna make clear that this series is by the vision of a person that has never worked with a functional language and has never heard about LISP or his dialects. Keep in mind that the languages that I feel comfortable with (not expert) are Javascript, PHP, and Python.</description>
    </item>
    
    <item>
      <title>TIL: CSS Selector Specificity</title>
      <link>https://blog.1pedro.dev/today-i-learned/til_css_specificity/</link>
      <pubDate>Wed, 30 Mar 2022 00:02:06 -0300</pubDate>
      
      <guid>https://blog.1pedro.dev/today-i-learned/til_css_specificity/</guid>
      <description>Today I&amp;rsquo;ve read a post from the code miner blog talking about CSS specificity. CSS Selector Specificity It&amp;rsquo;s a way of avoiding the use of !import directive and it&amp;rsquo;s quite simple:
Suppose that you have a CSS like this:
1 2 3 4 5 6 7 8 9 10 11  div { background-color: white; } #box { background-color: red; } .box { background-color: black; }   and this css code is applied to a HTML like this:</description>
    </item>
    
    <item>
      <title>TIL: How to convert a integer (32 bit) to binary using bitwise and bit-shift</title>
      <link>https://blog.1pedro.dev/today-i-learned/til_how_to_convert_int_to_binary_using_bitwise_and_bit_shift/</link>
      <pubDate>Mon, 28 Mar 2022 00:20:06 -0300</pubDate>
      
      <guid>https://blog.1pedro.dev/today-i-learned/til_how_to_convert_int_to_binary_using_bitwise_and_bit_shift/</guid>
      <description>Today I was exercising some competitive programming problems using Codility. The first problem named &amp;ldquo;Binary Gap&amp;rdquo; consists in a way to determine the longest zero occurrences in a binary string. The problem gives us a number and we should convert that number to a binary string then find the biggest consecutive zero occurrences in that binary string.
This problem is classified as easy and I didn&amp;rsquo;t take too much time to solve it.</description>
    </item>
    
    <item>
      <title>TIL: Git is not suitable for binary large files</title>
      <link>https://blog.1pedro.dev/today-i-learned/git_is_not_suitable_for_binary_large_files/</link>
      <pubDate>Sun, 27 Mar 2022 02:02:06 -0300</pubDate>
      
      <guid>https://blog.1pedro.dev/today-i-learned/git_is_not_suitable_for_binary_large_files/</guid>
      <description>Iâ€™d never thought about that until faced this problem. For me, git was the best option to keep track of file differences, either a text file or a binary file.
The Problem Today I&amp;rsquo;m facing a problem: I&amp;rsquo;ve tried to add PSD files to a git repository. That&amp;rsquo;s is not &amp;ldquo;wrong&amp;rdquo; but is a big mistake. If the PSD files are changed often you will end up with a large git repository.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://blog.1pedro.dev/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 -0300</pubDate>
      
      <guid>https://blog.1pedro.dev/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Articles</title>
      <link>https://blog.1pedro.dev/articles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.1pedro.dev/articles/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
